import * as crypto from "node:crypto";

export const newImpl = (buffer) => new crypto.X509Certificate(buffer);
export const ca = (cert) => cert.ca;
export const checkEmailImpl = (cert, email) => cert.checkEmail(email);
export const checkEmailOptsImpl = (cert, email, opts) => cert.checkEmail(email, opts);
export const checkHostImpl = (cert, name) => cert.checkHost(name);
export const checkHostOptsImpl = (cert, name, opts) => cert.checkHost(name, opts);
export const checkIPImpl = (cert, ip) => cert.checkIP(ip);
export const checkIssuedImpl = (cert, otherCert) => cert.checkIssued(otherCert);
export const checkPrivateKeyImpl = (cert, privateKey) => cert.checkPrivateKey(privateKey);
export const fingerprint = (cert) => cert.fingerprint;
export const fingerprint256 = (cert) => cert.fingerprint256;
export const fingerprint512 = (cert) => cert.fingerprint512;
export const infoAccess = (cert) => cert.infoAccess;
export const issuer = (cert) => cert.issuer;
export const issuerCertificateImpl = (cert) => cert.issuerCertificate;
export const extKeyUsage = (cert) => cert.extKeyUsage;
export const publicKey = (cert) => cert.publicKey;
export const raw = (cert) => cert.raw;
export const serialNumber = (cert) => cert.serialNumber;
export const subject = (cert) => cert.subject;
export const subjectAltName = (cert) => cert.subjectAltName;
export const toJSONJs = (cert) => cert.toJSON();
export const toLegacyObjectJs = (cert) => cert.toLegacyObject();
export const toStringJs = (cert) => cert.toString();
export const validFrom = (cert) => cert.validFrom;
export const validTo = (cert) => cert.validTo;
export const verifyImpl = (cert, publicKey) => cert.verify(publicKey);
